# Generated by Django 5.2.2 on 2025-06-05 06:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChickenBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(max_length=50)),
                ('batch_number', models.PositiveIntegerField()),
                ('initial_count', models.PositiveIntegerField()),
                ('current_count', models.PositiveIntegerField()),
                ('purchase_date', models.DateField()),
                ('hatch_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('assigned_farm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farm.farm')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EggProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('eggs_collected', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.chickenbatch')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, upload_to='cows/')),
                ('stage', models.CharField(choices=[('calf', 'Calf'), ('heifer', 'Heifer'), ('pregnant', 'Pregnant'), ('lactating', 'Lactating'), ('dry', 'Dry'), ('heat', 'Heat')], default='calf', max_length=20)),
                ('birth_date', models.DateField()),
                ('ai_date', models.DateField(blank=True, null=True)),
                ('estimated_birth', models.DateField(blank=True, null=True)),
                ('actual_birth', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mother', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='farm.cow')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.farm')),
            ],
        ),
        migrations.CreateModel(
            name='ChickenFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_name', models.CharField(max_length=100)),
                ('quantity_purchased', models.DecimalField(decimal_places=2, max_digits=8)),
                ('quantity_remaining', models.DecimalField(decimal_places=2, max_digits=8)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('purchase_date', models.DateField()),
                ('is_finished', models.BooleanField(default=False)),
                ('needs_restock', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.farm')),
            ],
        ),
        migrations.AddField(
            model_name='chickenbatch',
            name='farm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.farm'),
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feed_type', models.CharField(choices=[('dairy_meal', 'Dairy Meal'), ('maize_jam', 'Maize Jam'), ('maclic_supa', 'Maclic Supa'), ('maclic_plus', 'Maclic Plus'), ('napier_hay_silage', 'Napier/Hay/Silage')], max_length=20)),
                ('quantity_purchased', models.DecimalField(decimal_places=2, max_digits=8)),
                ('quantity_remaining', models.DecimalField(decimal_places=2, max_digits=8)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('transport_cost', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('purchase_date', models.DateField()),
                ('is_finished', models.BooleanField(default=False)),
                ('needs_restock', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.farm')),
            ],
        ),
        migrations.CreateModel(
            name='FeedConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('quantity_consumed', models.DecimalField(decimal_places=2, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.cow')),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.feed')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_sick', models.DateField()),
                ('disease_name', models.CharField(max_length=100)),
                ('date_treated', models.DateField()),
                ('medicine_used', models.CharField(max_length=100)),
                ('medicine_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('vet_name', models.CharField(max_length=100)),
                ('vet_contact', models.CharField(max_length=15)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.cow')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MilkSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('quantity_sold', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price_per_liter', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.farm')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RestockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('cow_feed', 'Cow Feed'), ('chicken_feed', 'Chicken Feed')], max_length=15)),
                ('item_name', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.farm')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='chickenbatch',
            unique_together={('farm', 'batch_number')},
        ),
        migrations.CreateModel(
            name='MilkProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('session', models.CharField(choices=[('morning', 'Morning'), ('afternoon', 'Afternoon'), ('evening', 'Evening')], max_length=10)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.cow')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('cow', 'date', 'session')},
            },
        ),
    ]
